/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/models/DibesferGardenHouse.glb
*/
import React, { MutableRefObject, useLayoutEffect, useRef } from 'react'
import { Grid, useGLTF, useScroll } from '@react-three/drei'
import gsap from 'gsap'
import { useFrame } from '@react-three/fiber'
import Blob from './Blob'

export const FLOOR_HEIGHT = 2.3
export const NB_FLOORS = 3

export function Office(props) {
  const { nodes, materials } = useGLTF('./models/DibesferGardenHouse.glb')
  const ref: any = useRef()
  const tl: any = useRef()

  const scroll = useScroll()

  useFrame((state: any) => {
    tl.current.seek(scroll.offset * tl.current.duration())
  })

  useLayoutEffect(() => {
    tl.current = gsap.timeline()

    tl.current.to(
      ref.current.position,
      {
        duration: 2,
        y: -FLOOR_HEIGHT * (NB_FLOORS - 1),
        x: 5,
      },
      0,
    )

    // Office Rotation
    tl.current.to(ref.current.rotation, { duration: 1, x: 0, y: Math.PI / 6, z: 0 }, 0)
    tl.current.to(ref.current.rotation, { duration: 1, x: 0, y: -Math.PI / 6, z: 0 }, 1)
    tl.current.to(ref.current.position, { duration: 2, x: -2 }, 2)
  }, [])

  return (
    <group {...props} dispose={null} ref={ref}>
      <mesh geometry={nodes.mesh_0.geometry} material={nodes.mesh_0.material} position={[-8, -1.5, 1]} />
      {/* <Blob route='/' position={[5, 1.2, 0]} /> */}
    </group>
  )
}

useGLTF.preload('./models/DibesferGardenHouse.glb')
